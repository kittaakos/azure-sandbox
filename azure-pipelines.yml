trigger:
  batch: true
  branches:
    include:
    - master

jobs:
- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - script: |
      export BUILD_NUMBER=$(git rev-parse --short HEAD)
      echo "##vso[task.setvariable variable=myVariable]$BUILD_NUMBER"
      echo my variable is $(myVariable) [!!! This is empty here.]
      echo my variable is $BUILD_NUMBER
      mkdir -p dist/mac && cd dist/mac && echo "on mac" > mac-$(myVariable).txt && ls -al
    displayName: 'Dummy Build (macOS)'
  - script: |
      echo my variable is $(myVariable) [!!! This is still empty here.]
      echo my variable is $BUILD_NUMBER
      mkdir -p dist/mac && cd dist/mac && echo "on mac" > mac-$(myVariable).txt && ls -al
    displayName: 'Dummy Build 2 (macOS)'

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: |
      git rev-parse --short HEAD > tmp.txt
      set /p BUILD_NUMBER=< tmp.txt
      echo "##vso[task.setvariable variable=myVariable]%BUILD_NUMBER%"
      echo my variable is $(myVariable)
      echo my variable is %BUILD_NUMBER%
      mkdir dist\\win && cd dist\\win && echo "on windows" > win-$(myVariable).txt && dir
    displayName: 'Dummy Build (Windows)'

- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      export BUILD_NUMBER=$(git rev-parse --short HEAD)
      echo "##vso[task.setvariable variable=myVariable]$BUILD_NUMBER"
      echo my variable is $(myVariable)
      echo my variable is $BUILD_NUMBER
      mkdir -p dist/linux && cd dist/linux && echo "on linux" > linux-$(myVariable).txt && ls -al
    displayName: 'Dummy Build (Linux)'